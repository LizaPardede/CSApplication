//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CSApplication.CSService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebService1Soap", Namespace="http://tempuri.org/")]
    public partial class WebService1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetDataRegOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataDoctorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataPolyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GedDataDoctorbyPolyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataInvOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataPatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AutUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDataReceiptHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertReceiptApotekDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertReceiptUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateReceiptUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDataReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataDepartmenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPertanyaanByDepartmenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDetailPertanyaanByPertanyaanOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCustomerSatisfactionRawatJalanOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCustomerSatisfactionFarmasiOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCustomerSatisfactionRawatInapOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService1() {
            this.Url = "http://10.160.1.123/CSService/WebService1.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetDataRegCompletedEventHandler GetDataRegCompleted;
        
        /// <remarks/>
        public event GetDataDoctorCompletedEventHandler GetDataDoctorCompleted;
        
        /// <remarks/>
        public event GetDataPolyCompletedEventHandler GetDataPolyCompleted;
        
        /// <remarks/>
        public event GedDataDoctorbyPolyCompletedEventHandler GedDataDoctorbyPolyCompleted;
        
        /// <remarks/>
        public event GetDataInvCompletedEventHandler GetDataInvCompleted;
        
        /// <remarks/>
        public event GetDataPatientCompletedEventHandler GetDataPatientCompleted;
        
        /// <remarks/>
        public event GetDataUserCompletedEventHandler GetDataUserCompleted;
        
        /// <remarks/>
        public event GetDataHistoryCompletedEventHandler GetDataHistoryCompleted;
        
        /// <remarks/>
        public event AutUserCompletedEventHandler AutUserCompleted;
        
        /// <remarks/>
        public event InsertDataReceiptHeaderCompletedEventHandler InsertDataReceiptHeaderCompleted;
        
        /// <remarks/>
        public event InsertReceiptApotekDetailCompletedEventHandler InsertReceiptApotekDetailCompleted;
        
        /// <remarks/>
        public event InsertReceiptUserCompletedEventHandler InsertReceiptUserCompleted;
        
        /// <remarks/>
        public event UpdateReceiptUserCompletedEventHandler UpdateReceiptUserCompleted;
        
        /// <remarks/>
        public event DeleteDataReceiptCompletedEventHandler DeleteDataReceiptCompleted;
        
        /// <remarks/>
        public event GetDataDepartmenCompletedEventHandler GetDataDepartmenCompleted;
        
        /// <remarks/>
        public event GetPertanyaanByDepartmenCompletedEventHandler GetPertanyaanByDepartmenCompleted;
        
        /// <remarks/>
        public event GetDetailPertanyaanByPertanyaanCompletedEventHandler GetDetailPertanyaanByPertanyaanCompleted;
        
        /// <remarks/>
        public event InsertCustomerSatisfactionRawatJalanCompletedEventHandler InsertCustomerSatisfactionRawatJalanCompleted;
        
        /// <remarks/>
        public event InsertCustomerSatisfactionFarmasiCompletedEventHandler InsertCustomerSatisfactionFarmasiCompleted;
        
        /// <remarks/>
        public event InsertCustomerSatisfactionRawatInapCompletedEventHandler InsertCustomerSatisfactionRawatInapCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataReg", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataReg(string id) {
            object[] results = this.Invoke("GetDataReg", new object[] {
                        id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataRegAsync(string id) {
            this.GetDataRegAsync(id, null);
        }
        
        /// <remarks/>
        public void GetDataRegAsync(string id, object userState) {
            if ((this.GetDataRegOperationCompleted == null)) {
                this.GetDataRegOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataRegOperationCompleted);
            }
            this.InvokeAsync("GetDataReg", new object[] {
                        id}, this.GetDataRegOperationCompleted, userState);
        }
        
        private void OnGetDataRegOperationCompleted(object arg) {
            if ((this.GetDataRegCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataRegCompleted(this, new GetDataRegCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataDoctor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataDoctor() {
            object[] results = this.Invoke("GetDataDoctor", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataDoctorAsync() {
            this.GetDataDoctorAsync(null);
        }
        
        /// <remarks/>
        public void GetDataDoctorAsync(object userState) {
            if ((this.GetDataDoctorOperationCompleted == null)) {
                this.GetDataDoctorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataDoctorOperationCompleted);
            }
            this.InvokeAsync("GetDataDoctor", new object[0], this.GetDataDoctorOperationCompleted, userState);
        }
        
        private void OnGetDataDoctorOperationCompleted(object arg) {
            if ((this.GetDataDoctorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataDoctorCompleted(this, new GetDataDoctorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataPoly", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataPoly() {
            object[] results = this.Invoke("GetDataPoly", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataPolyAsync() {
            this.GetDataPolyAsync(null);
        }
        
        /// <remarks/>
        public void GetDataPolyAsync(object userState) {
            if ((this.GetDataPolyOperationCompleted == null)) {
                this.GetDataPolyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataPolyOperationCompleted);
            }
            this.InvokeAsync("GetDataPoly", new object[0], this.GetDataPolyOperationCompleted, userState);
        }
        
        private void OnGetDataPolyOperationCompleted(object arg) {
            if ((this.GetDataPolyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataPolyCompleted(this, new GetDataPolyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GedDataDoctorbyPoly", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GedDataDoctorbyPoly(string Poly) {
            object[] results = this.Invoke("GedDataDoctorbyPoly", new object[] {
                        Poly});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GedDataDoctorbyPolyAsync(string Poly) {
            this.GedDataDoctorbyPolyAsync(Poly, null);
        }
        
        /// <remarks/>
        public void GedDataDoctorbyPolyAsync(string Poly, object userState) {
            if ((this.GedDataDoctorbyPolyOperationCompleted == null)) {
                this.GedDataDoctorbyPolyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGedDataDoctorbyPolyOperationCompleted);
            }
            this.InvokeAsync("GedDataDoctorbyPoly", new object[] {
                        Poly}, this.GedDataDoctorbyPolyOperationCompleted, userState);
        }
        
        private void OnGedDataDoctorbyPolyOperationCompleted(object arg) {
            if ((this.GedDataDoctorbyPolyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GedDataDoctorbyPolyCompleted(this, new GedDataDoctorbyPolyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataInv", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataInv() {
            object[] results = this.Invoke("GetDataInv", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataInvAsync() {
            this.GetDataInvAsync(null);
        }
        
        /// <remarks/>
        public void GetDataInvAsync(object userState) {
            if ((this.GetDataInvOperationCompleted == null)) {
                this.GetDataInvOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataInvOperationCompleted);
            }
            this.InvokeAsync("GetDataInv", new object[0], this.GetDataInvOperationCompleted, userState);
        }
        
        private void OnGetDataInvOperationCompleted(object arg) {
            if ((this.GetDataInvCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataInvCompleted(this, new GetDataInvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataPatient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataPatient(string id) {
            object[] results = this.Invoke("GetDataPatient", new object[] {
                        id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataPatientAsync(string id) {
            this.GetDataPatientAsync(id, null);
        }
        
        /// <remarks/>
        public void GetDataPatientAsync(string id, object userState) {
            if ((this.GetDataPatientOperationCompleted == null)) {
                this.GetDataPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataPatientOperationCompleted);
            }
            this.InvokeAsync("GetDataPatient", new object[] {
                        id}, this.GetDataPatientOperationCompleted, userState);
        }
        
        private void OnGetDataPatientOperationCompleted(object arg) {
            if ((this.GetDataPatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataPatientCompleted(this, new GetDataPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataUser(string id) {
            object[] results = this.Invoke("GetDataUser", new object[] {
                        id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataUserAsync(string id) {
            this.GetDataUserAsync(id, null);
        }
        
        /// <remarks/>
        public void GetDataUserAsync(string id, object userState) {
            if ((this.GetDataUserOperationCompleted == null)) {
                this.GetDataUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataUserOperationCompleted);
            }
            this.InvokeAsync("GetDataUser", new object[] {
                        id}, this.GetDataUserOperationCompleted, userState);
        }
        
        private void OnGetDataUserOperationCompleted(object arg) {
            if ((this.GetDataUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataUserCompleted(this, new GetDataUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataHistory(string idpatient) {
            object[] results = this.Invoke("GetDataHistory", new object[] {
                        idpatient});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataHistoryAsync(string idpatient) {
            this.GetDataHistoryAsync(idpatient, null);
        }
        
        /// <remarks/>
        public void GetDataHistoryAsync(string idpatient, object userState) {
            if ((this.GetDataHistoryOperationCompleted == null)) {
                this.GetDataHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataHistoryOperationCompleted);
            }
            this.InvokeAsync("GetDataHistory", new object[] {
                        idpatient}, this.GetDataHistoryOperationCompleted, userState);
        }
        
        private void OnGetDataHistoryOperationCompleted(object arg) {
            if ((this.GetDataHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataHistoryCompleted(this, new GetDataHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet AutUser(string username, string password) {
            object[] results = this.Invoke("AutUser", new object[] {
                        username,
                        password});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void AutUserAsync(string username, string password) {
            this.AutUserAsync(username, password, null);
        }
        
        /// <remarks/>
        public void AutUserAsync(string username, string password, object userState) {
            if ((this.AutUserOperationCompleted == null)) {
                this.AutUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAutUserOperationCompleted);
            }
            this.InvokeAsync("AutUser", new object[] {
                        username,
                        password}, this.AutUserOperationCompleted, userState);
        }
        
        private void OnAutUserOperationCompleted(object arg) {
            if ((this.AutUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AutUserCompleted(this, new AutUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertDataReceiptHeader", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet InsertDataReceiptHeader(string Sales_Aptk_ID, string Sales_Aptk_Type, string Sales_Aptk_Reg_ID, string Sales_Aptk_Patient_ID, string Sales_Aptk_Patient_Name, string Sales_Aptk_Doctor_ID, string Sales_Aptk_Doctor_Name, string user) {
            object[] results = this.Invoke("InsertDataReceiptHeader", new object[] {
                        Sales_Aptk_ID,
                        Sales_Aptk_Type,
                        Sales_Aptk_Reg_ID,
                        Sales_Aptk_Patient_ID,
                        Sales_Aptk_Patient_Name,
                        Sales_Aptk_Doctor_ID,
                        Sales_Aptk_Doctor_Name,
                        user});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDataReceiptHeaderAsync(string Sales_Aptk_ID, string Sales_Aptk_Type, string Sales_Aptk_Reg_ID, string Sales_Aptk_Patient_ID, string Sales_Aptk_Patient_Name, string Sales_Aptk_Doctor_ID, string Sales_Aptk_Doctor_Name, string user) {
            this.InsertDataReceiptHeaderAsync(Sales_Aptk_ID, Sales_Aptk_Type, Sales_Aptk_Reg_ID, Sales_Aptk_Patient_ID, Sales_Aptk_Patient_Name, Sales_Aptk_Doctor_ID, Sales_Aptk_Doctor_Name, user, null);
        }
        
        /// <remarks/>
        public void InsertDataReceiptHeaderAsync(string Sales_Aptk_ID, string Sales_Aptk_Type, string Sales_Aptk_Reg_ID, string Sales_Aptk_Patient_ID, string Sales_Aptk_Patient_Name, string Sales_Aptk_Doctor_ID, string Sales_Aptk_Doctor_Name, string user, object userState) {
            if ((this.InsertDataReceiptHeaderOperationCompleted == null)) {
                this.InsertDataReceiptHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDataReceiptHeaderOperationCompleted);
            }
            this.InvokeAsync("InsertDataReceiptHeader", new object[] {
                        Sales_Aptk_ID,
                        Sales_Aptk_Type,
                        Sales_Aptk_Reg_ID,
                        Sales_Aptk_Patient_ID,
                        Sales_Aptk_Patient_Name,
                        Sales_Aptk_Doctor_ID,
                        Sales_Aptk_Doctor_Name,
                        user}, this.InsertDataReceiptHeaderOperationCompleted, userState);
        }
        
        private void OnInsertDataReceiptHeaderOperationCompleted(object arg) {
            if ((this.InsertDataReceiptHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDataReceiptHeaderCompleted(this, new InsertDataReceiptHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertReceiptApotekDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet InsertReceiptApotekDetail(string Sales_Aptk_ID, int Sales_Aptk_Detail_ID, string Sales_Aptk_Detail_Item_ID, double Sales_Aptk_Detail_Qty, string user) {
            object[] results = this.Invoke("InsertReceiptApotekDetail", new object[] {
                        Sales_Aptk_ID,
                        Sales_Aptk_Detail_ID,
                        Sales_Aptk_Detail_Item_ID,
                        Sales_Aptk_Detail_Qty,
                        user});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void InsertReceiptApotekDetailAsync(string Sales_Aptk_ID, int Sales_Aptk_Detail_ID, string Sales_Aptk_Detail_Item_ID, double Sales_Aptk_Detail_Qty, string user) {
            this.InsertReceiptApotekDetailAsync(Sales_Aptk_ID, Sales_Aptk_Detail_ID, Sales_Aptk_Detail_Item_ID, Sales_Aptk_Detail_Qty, user, null);
        }
        
        /// <remarks/>
        public void InsertReceiptApotekDetailAsync(string Sales_Aptk_ID, int Sales_Aptk_Detail_ID, string Sales_Aptk_Detail_Item_ID, double Sales_Aptk_Detail_Qty, string user, object userState) {
            if ((this.InsertReceiptApotekDetailOperationCompleted == null)) {
                this.InsertReceiptApotekDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertReceiptApotekDetailOperationCompleted);
            }
            this.InvokeAsync("InsertReceiptApotekDetail", new object[] {
                        Sales_Aptk_ID,
                        Sales_Aptk_Detail_ID,
                        Sales_Aptk_Detail_Item_ID,
                        Sales_Aptk_Detail_Qty,
                        user}, this.InsertReceiptApotekDetailOperationCompleted, userState);
        }
        
        private void OnInsertReceiptApotekDetailOperationCompleted(object arg) {
            if ((this.InsertReceiptApotekDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertReceiptApotekDetailCompleted(this, new InsertReceiptApotekDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertReceiptUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet InsertReceiptUser(string User_ID, string User_Name, string User_Password, string user) {
            object[] results = this.Invoke("InsertReceiptUser", new object[] {
                        User_ID,
                        User_Name,
                        User_Password,
                        user});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void InsertReceiptUserAsync(string User_ID, string User_Name, string User_Password, string user) {
            this.InsertReceiptUserAsync(User_ID, User_Name, User_Password, user, null);
        }
        
        /// <remarks/>
        public void InsertReceiptUserAsync(string User_ID, string User_Name, string User_Password, string user, object userState) {
            if ((this.InsertReceiptUserOperationCompleted == null)) {
                this.InsertReceiptUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertReceiptUserOperationCompleted);
            }
            this.InvokeAsync("InsertReceiptUser", new object[] {
                        User_ID,
                        User_Name,
                        User_Password,
                        user}, this.InsertReceiptUserOperationCompleted, userState);
        }
        
        private void OnInsertReceiptUserOperationCompleted(object arg) {
            if ((this.InsertReceiptUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertReceiptUserCompleted(this, new InsertReceiptUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateReceiptUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpdateReceiptUser(string User_ID, string User_Name, string User_Password, string user) {
            object[] results = this.Invoke("UpdateReceiptUser", new object[] {
                        User_ID,
                        User_Name,
                        User_Password,
                        user});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateReceiptUserAsync(string User_ID, string User_Name, string User_Password, string user) {
            this.UpdateReceiptUserAsync(User_ID, User_Name, User_Password, user, null);
        }
        
        /// <remarks/>
        public void UpdateReceiptUserAsync(string User_ID, string User_Name, string User_Password, string user, object userState) {
            if ((this.UpdateReceiptUserOperationCompleted == null)) {
                this.UpdateReceiptUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateReceiptUserOperationCompleted);
            }
            this.InvokeAsync("UpdateReceiptUser", new object[] {
                        User_ID,
                        User_Name,
                        User_Password,
                        user}, this.UpdateReceiptUserOperationCompleted, userState);
        }
        
        private void OnUpdateReceiptUserOperationCompleted(object arg) {
            if ((this.UpdateReceiptUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateReceiptUserCompleted(this, new UpdateReceiptUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteDataReceipt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteDataReceipt(string regid, string user) {
            object[] results = this.Invoke("DeleteDataReceipt", new object[] {
                        regid,
                        user});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDataReceiptAsync(string regid, string user) {
            this.DeleteDataReceiptAsync(regid, user, null);
        }
        
        /// <remarks/>
        public void DeleteDataReceiptAsync(string regid, string user, object userState) {
            if ((this.DeleteDataReceiptOperationCompleted == null)) {
                this.DeleteDataReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDataReceiptOperationCompleted);
            }
            this.InvokeAsync("DeleteDataReceipt", new object[] {
                        regid,
                        user}, this.DeleteDataReceiptOperationCompleted, userState);
        }
        
        private void OnDeleteDataReceiptOperationCompleted(object arg) {
            if ((this.DeleteDataReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDataReceiptCompleted(this, new DeleteDataReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataDepartmen", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataDepartmen() {
            object[] results = this.Invoke("GetDataDepartmen", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataDepartmenAsync() {
            this.GetDataDepartmenAsync(null);
        }
        
        /// <remarks/>
        public void GetDataDepartmenAsync(object userState) {
            if ((this.GetDataDepartmenOperationCompleted == null)) {
                this.GetDataDepartmenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataDepartmenOperationCompleted);
            }
            this.InvokeAsync("GetDataDepartmen", new object[0], this.GetDataDepartmenOperationCompleted, userState);
        }
        
        private void OnGetDataDepartmenOperationCompleted(object arg) {
            if ((this.GetDataDepartmenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataDepartmenCompleted(this, new GetDataDepartmenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPertanyaanByDepartmen", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPertanyaanByDepartmen(string DepartmentID) {
            object[] results = this.Invoke("GetPertanyaanByDepartmen", new object[] {
                        DepartmentID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPertanyaanByDepartmenAsync(string DepartmentID) {
            this.GetPertanyaanByDepartmenAsync(DepartmentID, null);
        }
        
        /// <remarks/>
        public void GetPertanyaanByDepartmenAsync(string DepartmentID, object userState) {
            if ((this.GetPertanyaanByDepartmenOperationCompleted == null)) {
                this.GetPertanyaanByDepartmenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPertanyaanByDepartmenOperationCompleted);
            }
            this.InvokeAsync("GetPertanyaanByDepartmen", new object[] {
                        DepartmentID}, this.GetPertanyaanByDepartmenOperationCompleted, userState);
        }
        
        private void OnGetPertanyaanByDepartmenOperationCompleted(object arg) {
            if ((this.GetPertanyaanByDepartmenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPertanyaanByDepartmenCompleted(this, new GetPertanyaanByDepartmenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDetailPertanyaanByPertanyaan", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDetailPertanyaanByPertanyaan(string PertanyaanID) {
            object[] results = this.Invoke("GetDetailPertanyaanByPertanyaan", new object[] {
                        PertanyaanID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDetailPertanyaanByPertanyaanAsync(string PertanyaanID) {
            this.GetDetailPertanyaanByPertanyaanAsync(PertanyaanID, null);
        }
        
        /// <remarks/>
        public void GetDetailPertanyaanByPertanyaanAsync(string PertanyaanID, object userState) {
            if ((this.GetDetailPertanyaanByPertanyaanOperationCompleted == null)) {
                this.GetDetailPertanyaanByPertanyaanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDetailPertanyaanByPertanyaanOperationCompleted);
            }
            this.InvokeAsync("GetDetailPertanyaanByPertanyaan", new object[] {
                        PertanyaanID}, this.GetDetailPertanyaanByPertanyaanOperationCompleted, userState);
        }
        
        private void OnGetDetailPertanyaanByPertanyaanOperationCompleted(object arg) {
            if ((this.GetDetailPertanyaanByPertanyaanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDetailPertanyaanByPertanyaanCompleted(this, new GetDetailPertanyaanByPertanyaanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCustomerSatisfactionRawatJalan", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet InsertCustomerSatisfactionRawatJalan(string Poly_ID, string Doctor_ID, string Kategori_ID, string Pertanyaan_ID, string Detail_Pertanyaan_ID, System.DateTime StartTime, System.DateTime EndTime, string user) {
            object[] results = this.Invoke("InsertCustomerSatisfactionRawatJalan", new object[] {
                        Poly_ID,
                        Doctor_ID,
                        Kategori_ID,
                        Pertanyaan_ID,
                        Detail_Pertanyaan_ID,
                        StartTime,
                        EndTime,
                        user});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCustomerSatisfactionRawatJalanAsync(string Poly_ID, string Doctor_ID, string Kategori_ID, string Pertanyaan_ID, string Detail_Pertanyaan_ID, System.DateTime StartTime, System.DateTime EndTime, string user) {
            this.InsertCustomerSatisfactionRawatJalanAsync(Poly_ID, Doctor_ID, Kategori_ID, Pertanyaan_ID, Detail_Pertanyaan_ID, StartTime, EndTime, user, null);
        }
        
        /// <remarks/>
        public void InsertCustomerSatisfactionRawatJalanAsync(string Poly_ID, string Doctor_ID, string Kategori_ID, string Pertanyaan_ID, string Detail_Pertanyaan_ID, System.DateTime StartTime, System.DateTime EndTime, string user, object userState) {
            if ((this.InsertCustomerSatisfactionRawatJalanOperationCompleted == null)) {
                this.InsertCustomerSatisfactionRawatJalanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCustomerSatisfactionRawatJalanOperationCompleted);
            }
            this.InvokeAsync("InsertCustomerSatisfactionRawatJalan", new object[] {
                        Poly_ID,
                        Doctor_ID,
                        Kategori_ID,
                        Pertanyaan_ID,
                        Detail_Pertanyaan_ID,
                        StartTime,
                        EndTime,
                        user}, this.InsertCustomerSatisfactionRawatJalanOperationCompleted, userState);
        }
        
        private void OnInsertCustomerSatisfactionRawatJalanOperationCompleted(object arg) {
            if ((this.InsertCustomerSatisfactionRawatJalanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCustomerSatisfactionRawatJalanCompleted(this, new InsertCustomerSatisfactionRawatJalanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCustomerSatisfactionFarmasi", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet InsertCustomerSatisfactionFarmasi(string Kategori_ID, string Pertanyaan_ID, string Detail_Pertanyaan_ID, System.DateTime StartTime, System.DateTime EndTime, string user) {
            object[] results = this.Invoke("InsertCustomerSatisfactionFarmasi", new object[] {
                        Kategori_ID,
                        Pertanyaan_ID,
                        Detail_Pertanyaan_ID,
                        StartTime,
                        EndTime,
                        user});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCustomerSatisfactionFarmasiAsync(string Kategori_ID, string Pertanyaan_ID, string Detail_Pertanyaan_ID, System.DateTime StartTime, System.DateTime EndTime, string user) {
            this.InsertCustomerSatisfactionFarmasiAsync(Kategori_ID, Pertanyaan_ID, Detail_Pertanyaan_ID, StartTime, EndTime, user, null);
        }
        
        /// <remarks/>
        public void InsertCustomerSatisfactionFarmasiAsync(string Kategori_ID, string Pertanyaan_ID, string Detail_Pertanyaan_ID, System.DateTime StartTime, System.DateTime EndTime, string user, object userState) {
            if ((this.InsertCustomerSatisfactionFarmasiOperationCompleted == null)) {
                this.InsertCustomerSatisfactionFarmasiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCustomerSatisfactionFarmasiOperationCompleted);
            }
            this.InvokeAsync("InsertCustomerSatisfactionFarmasi", new object[] {
                        Kategori_ID,
                        Pertanyaan_ID,
                        Detail_Pertanyaan_ID,
                        StartTime,
                        EndTime,
                        user}, this.InsertCustomerSatisfactionFarmasiOperationCompleted, userState);
        }
        
        private void OnInsertCustomerSatisfactionFarmasiOperationCompleted(object arg) {
            if ((this.InsertCustomerSatisfactionFarmasiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCustomerSatisfactionFarmasiCompleted(this, new InsertCustomerSatisfactionFarmasiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCustomerSatisfactionRawatInap", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet InsertCustomerSatisfactionRawatInap(string Kategori_ID, string Pertanyaan_ID, string Detail_Pertanyaan_ID, System.DateTime StartTime, System.DateTime EndTime, string user) {
            object[] results = this.Invoke("InsertCustomerSatisfactionRawatInap", new object[] {
                        Kategori_ID,
                        Pertanyaan_ID,
                        Detail_Pertanyaan_ID,
                        StartTime,
                        EndTime,
                        user});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCustomerSatisfactionRawatInapAsync(string Kategori_ID, string Pertanyaan_ID, string Detail_Pertanyaan_ID, System.DateTime StartTime, System.DateTime EndTime, string user) {
            this.InsertCustomerSatisfactionRawatInapAsync(Kategori_ID, Pertanyaan_ID, Detail_Pertanyaan_ID, StartTime, EndTime, user, null);
        }
        
        /// <remarks/>
        public void InsertCustomerSatisfactionRawatInapAsync(string Kategori_ID, string Pertanyaan_ID, string Detail_Pertanyaan_ID, System.DateTime StartTime, System.DateTime EndTime, string user, object userState) {
            if ((this.InsertCustomerSatisfactionRawatInapOperationCompleted == null)) {
                this.InsertCustomerSatisfactionRawatInapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCustomerSatisfactionRawatInapOperationCompleted);
            }
            this.InvokeAsync("InsertCustomerSatisfactionRawatInap", new object[] {
                        Kategori_ID,
                        Pertanyaan_ID,
                        Detail_Pertanyaan_ID,
                        StartTime,
                        EndTime,
                        user}, this.InsertCustomerSatisfactionRawatInapOperationCompleted, userState);
        }
        
        private void OnInsertCustomerSatisfactionRawatInapOperationCompleted(object arg) {
            if ((this.InsertCustomerSatisfactionRawatInapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCustomerSatisfactionRawatInapCompleted(this, new InsertCustomerSatisfactionRawatInapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetDataRegCompletedEventHandler(object sender, GetDataRegCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataRegCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataRegCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetDataDoctorCompletedEventHandler(object sender, GetDataDoctorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataDoctorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataDoctorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetDataPolyCompletedEventHandler(object sender, GetDataPolyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataPolyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataPolyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GedDataDoctorbyPolyCompletedEventHandler(object sender, GedDataDoctorbyPolyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GedDataDoctorbyPolyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GedDataDoctorbyPolyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetDataInvCompletedEventHandler(object sender, GetDataInvCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataInvCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataInvCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetDataPatientCompletedEventHandler(object sender, GetDataPatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetDataUserCompletedEventHandler(object sender, GetDataUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetDataHistoryCompletedEventHandler(object sender, GetDataHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AutUserCompletedEventHandler(object sender, AutUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AutUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AutUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void InsertDataReceiptHeaderCompletedEventHandler(object sender, InsertDataReceiptHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDataReceiptHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDataReceiptHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void InsertReceiptApotekDetailCompletedEventHandler(object sender, InsertReceiptApotekDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertReceiptApotekDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertReceiptApotekDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void InsertReceiptUserCompletedEventHandler(object sender, InsertReceiptUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertReceiptUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertReceiptUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateReceiptUserCompletedEventHandler(object sender, UpdateReceiptUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateReceiptUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateReceiptUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void DeleteDataReceiptCompletedEventHandler(object sender, DeleteDataReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDataReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDataReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetDataDepartmenCompletedEventHandler(object sender, GetDataDepartmenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataDepartmenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataDepartmenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetPertanyaanByDepartmenCompletedEventHandler(object sender, GetPertanyaanByDepartmenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPertanyaanByDepartmenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPertanyaanByDepartmenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetDetailPertanyaanByPertanyaanCompletedEventHandler(object sender, GetDetailPertanyaanByPertanyaanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDetailPertanyaanByPertanyaanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDetailPertanyaanByPertanyaanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void InsertCustomerSatisfactionRawatJalanCompletedEventHandler(object sender, InsertCustomerSatisfactionRawatJalanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCustomerSatisfactionRawatJalanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCustomerSatisfactionRawatJalanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void InsertCustomerSatisfactionFarmasiCompletedEventHandler(object sender, InsertCustomerSatisfactionFarmasiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCustomerSatisfactionFarmasiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCustomerSatisfactionFarmasiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void InsertCustomerSatisfactionRawatInapCompletedEventHandler(object sender, InsertCustomerSatisfactionRawatInapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCustomerSatisfactionRawatInapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCustomerSatisfactionRawatInapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591